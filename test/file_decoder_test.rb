require "./lib/paramorse"
require "./test/test_helper"

class TestFileDecoder < Minitest::Test
  def test_decoder_exists
    file_dec = ParaMorse::FileDecoder.new

    assert_instance_of ParaMorse::FileDecoder, file_dec
  end

  def test_decoder_can_receive_encoded_and_decoded_filenames
    file_dec = ParaMorse::FileDecoder.new

    assert file_dec.decode("test_encoded.txt", "test_plain_output.txt")
  end

  def test_file_decoder_reads_contents_from_encoded_filename
    file_enc = ParaMorse::FileEncoder.new
    file_dec = ParaMorse::FileDecoder.new
    file_enc.encode("test_plain.txt", "test_encoded.txt")
    expected = "11100010101010001010001010100000001010001010100000001011100000001110001000101010001110000000101011101000101000101110101000100010111010111010111000000010100010101110100000001110101110111000111011101110001010111000000010101010001011100010101011100010000000101011101000111011101110001010111000111010001110101000000011100010101010001010001010100011101110101011101110000000111000101010100010001110100000001110101110111000111011101110001010111000000010101010001011100010101011100010000000101011101000111011101110001010111000111010001110101000000011100010101010001000000011100010001010100011100000001010111010001010001011101010001000101110101110101110000000\nn1011100010111010100010111010100000001110001010101000111011101110001010100010000000111010111010001011101000@0001110111010100011101011101110000000111010111010001010101000101110001011101000101110001110101110100011100010001011101000$000000011100010101010001011100011100000001110111000ä000111010111000ē000101010000000111000101010100010000000100011101000111011101000101110101000101000101010001010101000000010111010100010111000111010001110111010001010111000101110001110111010001000000010101000111011101110000000101011100011101000101000111011101011100010101110001000101110101110101110000000\n\n101000000011100010101010001010001110100011101011100000001110001010101000101110001110000000101000000010111011100010100010111010100010111010100000001110100010001000111010100000001110111000111011101110001011101000100000001011101010001010001110100010001010100010111010111010111000101110101110101110001011101011101011100000001010100011101110111000111011101010111011100000001010101000100010111010001000000010111000101110100010000000101010001110111011100011101110001000000011101110111000101011101000000011101110001110101110111000000010101110100010111000101010111000111011101110001011101000101000111000100000001110101010001011100011101000111010100010101000111011101110101010000000\n-0000000111011100010001110001011100010111010100010111010100010100011101011101000101110000000\n-000000010111010001010001010100010000000101110001110111010001011100010100011101000101010001110000000\n-00000001011101110100010100011101000111010111000000010101110100010111010100011101110111000111010111011100011101010000000\n-000000011100010111010001011100011101110001011101110100010111010100010001110101000000011101010100011101011101110000000111000101011100010111010001110001011101010001000101010000000\n-000000010111010100010001110101000000011101110101000100010111011101000101110111010001000101110101000101000111010000000\n\nn"
    actual = File.read("./encoded_files/test_encoded.txt")

    assert_equal expected, actual
  end

  def test_file_decoder_writes_decoded_file_using_given_filename
    file_dec = ParaMorse::FileDecoder.new
    file_dec.write_file("test_plain_output.txt", "test")

    assert_equal true, File.exist?("./decoded_files/test_plain_output.txt")
    assert_equal "test", File.read("./decoded_files/test_plain_output.txt")
  end

  def test_file_decoder_decodes_text_from_file
    file_enc = ParaMorse::FileEncoder.new
    file_dec = ParaMorse::FileDecoder.new
    file_enc.encode("test_plain.txt", "test_encoded.txt")
    expected = "this is a test file. if you have found this, then you have found the test file. \ncongratulations! you get to see how i am testing grammar... new lines... and \nall those cr@zy character$ that mäkēs the english language so unique. \n\ni think that i will need more lines... so, here are some of my favorite bands: \n- metallica \n- rise against \n- pink floyd \n- trampled by turtles \n- led zeppelin \n\nrock on you guys... shine on you crazy diamonds. \n"

    assert_equal expected, file_dec.decode_file_contents("test_encoded.txt")
  end

  def test_file_decoder_saves_decoded_text_file_to_directory
    file_enc = ParaMorse::FileEncoder.new
    file_dec = ParaMorse::FileDecoder.new
    file_enc.encode("test_plain.txt", "test_encoded.txt")
    expected = "this is a test file. if you have found this, then you have found the test file. \ncongratulations! you get to see how i am testing grammar... new lines... and \nall those cr@zy character$ that mäkēs the english language so unique. \n\ni think that i will need more lines... so, here are some of my favorite bands: \n- metallica \n- rise against \n- pink floyd \n- trampled by turtles \n- led zeppelin \n\nrock on you guys... shine on you crazy diamonds. \n"
    file_dec.decode("test_encoded.txt", "test_plain_output.txt")

    assert_equal expected, File.read("./decoded_files/test_plain_output.txt")
  end

  def test_file_decoder_can_handle_larger_news_stories
    file_enc = ParaMorse::FileEncoder.new
    file_dec = ParaMorse::FileDecoder.new
    file_enc.encode("test_large_news_file.txt", "test_large_news_file_encoded.txt")
    expected = "Washington (CNN) - Donald Trump backed off a false claim Friday morning, admitting he had not seen a video of a $400 million payment being unloaded from a US plane in Iran.".downcase
    file_dec.decode("test_large_news_file_encoded.txt", "test_large_news_output.txt")

    assert_equal expected, File.read("./decoded_files/test_large_news_output.txt")[0..171]
  end
end
